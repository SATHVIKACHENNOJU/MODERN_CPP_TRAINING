1)







10 20 30 

1)C-style array
    10      20      30
    0x100H  0x104H  0x108h
    ^
    |
    arr

2)std::vector

    10      20      30
    0x100H  0x104H  0x108h
       ^                ^
       |                |
[   0x100H |        0x108h  |   0x120H  ]
    std::vector<int> data;         |
                                   ^
                                Capacity

3)std::list<T>

    0x111H              0x200H              0x800H
    NULLptr|10|0x200H   0x111H|20|0x800H    0x200H|30|NULLptr

SuedoCodes:

FOR CONSECUTIVE ELEENTS:

**IN ARRAY**

form base location to last element location(size-1)

-access element access
baseaddress+(location*size of each element)

** IN LINK LIST**

from first location:
    -dereference to reach the element,access it
    -Now,read the address for the next element.
    -if next pointer is NULLptr,break.
    -else,repeat steps.


Universal algorithm

a)for every element fetched from the cointainer
(DON't give a damn how you get it),

    -access the element and do something with it
    
"""ITERATORS:"code working in the backgroun!!!"""""
"ITERATORS are abstractions over pointer to element in a cointainer"